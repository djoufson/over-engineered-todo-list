stages:
  - build
  - deploy

build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:8.0-alpine
  script:
    - dotnet restore
    - dotnet build --configuration Release
    - dotnet publish ./api -c Release -o output
  artifacts:
    paths:
      - output/
    expire_in: 1 hour
  only:
    - develop
    - main

deploy_main:
  stage: deploy
  image: alpine:latest
  script:
    - apk update && apk add --no-cache curl zip bash
    - curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    - apk add --no-cache libintl gettext ca-certificates openssl bash && wget -q https://aka.ms/InstallAzureCLIDeb -O install.sh && bash install.sh
    - echo "Installing zip utility..."
    - apk add --no-cache zip
    - cd output && zip -r ../deploy.zip . && cd ..
    - az login --service-principal -u "$AZURE_CLIENT_ID" -p "$AZURE_CLIENT_SECRET" --tenant "$AZURE_TENANT_ID"
    - az webapp deploy --resource-group djoufson-learnings --name over-engineered-todo-list --src-path artifacts.zip --type zip
  only:
    - main
  dependencies:
    - build
